name: Maven Package Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Release version"
        required: true
        default: ""
      developmentVersion:
        description: "Snapshot version"
        required: true
        default: ""

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        java-package: 'jdk'
        cache: 'maven'
        server-id: central
        server-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        server-password: ${{ secrets.MAVEN_CENRAL_TOKEN }}
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    - name: Verify Whether a Release is Ready
      id: release
      shell: bash
      run: |
        if [ "${{ github.event.inputs.releaseVersion }}" != "" ] && [ "${{ github.event.inputs.developmentVersion }}" != "" ]; then
          echo "auto_release=true" >> $GITHUB_ENV
        else
          echo "auto_release=false" >> $GITHUB_ENV
        fi
    - name: Configure Git User
      run: |
          git config user.email "actions@users.noreply.github.com"
          git config user.name "GitHub Actions"
    - name: Release With Maven
      run: |
        export GPG_TTY=$(tty)
        mvn -B --file pom.xml release:prepare release:perform \
          -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }}
      env:
        AUTO_RELEASE_AFTER_CLOSE: ${{ env.auto_release }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Artifact Name
      shell: bash
      run: |
        echo "artifact_name=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> "$GITHUB_ENV"
    - name: Define Jar Name
      shell: bash
      run: |
        echo "{{ env.artifact_name }}"
        ls -al ./target/
        mv ./target/*.*:${{ env.artifact_name }}.jar ./target/${{ env.artifact_name }}.jar
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.artifact_name }}-${{ env.sha_short }}
        path: ./target/${{ env.artifact_name }}.jar
    - name: Workflow Release Notes
      uses: peter-evans/repository-dispatch@v2
      if: ${{ github.event.inputs.releaseVersion }} != "" && ${{ github.event.inputs.developmentVersion }} != ""
      with:
        event-type: release-notes
        client-payload: '{"auto_release": "${{ env.auto_release }}", "artifact": "${{ env.artifact_name }}-${{ env.sha_short }}"}'
